9-1
public class TestCircle {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Circle circle1=new Circle();
		System.out.println("The area of the circle of radius"+circle1.radius+" is "+circle1.getArea());
		Circle circle2=new Circle(25);
		System.out.println("The area of the circle of radius"+circle2.radius+" is "+circle2.getArea());
		Circle circle3=new Circle(125);
		System.out.println("The area of the circle of radius"+circle3.radius+" is "+circle3.getArea());
		circle2.radius=100;
		System.out.println("The area of the circle of radius"+circle2.radius+" is "+circle2.getArea());
	}
}
class Circle{
	double radius;

	Circle(){
		radius=1;
	}
	Circle(double newRadius){
		radius=newRadius;
	}

	double getArea() {
		return radius*radius*Math.PI;
	}
	double getPerimeter() {
		return 2*radius*Math.PI;
	}
	void setRadius(double newRadius) {
		radius=newRadius;
	}
}





9-2
public class Circle {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Circle circle1=new Circle();
		System.out.println("The area of the circle of radius"+circle1.radius+" is "+circle1.getArea());
		Circle circle2=new Circle(25);
		System.out.println("The area of the circle of radius"+circle2.radius+" is "+circle2.getArea());
		Circle circle3=new Circle(125);
		System.out.println("The area of the circle of radius"+circle3.radius+" is "+circle3.getArea());
		circle2.radius=100;
		System.out.println("The area of the circle of radius"+circle2.radius+" is "+circle2.getArea());
	}
	double radius;
	Circle(){
		radius=1;
	}
	Circle(double newRadius){
		radius=newRadius;
	}
	double getArea() {
		return radius*radius*Math.PI;
	}
	double getPerimeter() {
		return 2*radius*Math.PI;
	}
	void setRadius(double newRadius) {
		radius=newRadius;
	}
}





9-3
public class TV {
	int channel=1;
	int volumeLevel=1;
	boolean on =false;
	public TV() {
	}
	public void turn0n() {
		on=true;
	}
	public void turn0ff() {
		on=false;
	}
	public void setChannel(int newChannel) {
		if (on&&newChannel>=1&&newChannel<=120)
			channel=newChannel;
	}
	public void setvolume(int newvolumeLevel) {
		if (on&&newvolumeLevel>=1&&newvolumeLevel<=7)
			volumeLevel=newvolumeLevel;
	}
	public void channnelUp() {
		if (on&&channel<120)
			channel++;
	}
	public void channelDown() {
		if (on&&channel>1)
			channel--;
	}
	public void volumeUp() {
		if (on&&volumeLevel<7)
			volumeLevel++;
	}
	public void volumeDown() {
		if (on&&volumeLevel>1)
			volumeLevel--;
	}
}





9-4
public class TestTV {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		TV tv1=new TV();
		tv1.turn0n();
		tv1.setChannel(30);
		tv1.setvolume(3);
		
		TV tv2=new TV();
		tv2.turn0n();
		tv2.channnelUp();
		tv2.channnelUp();
		tv2.volumeUp();
		
		System.out.println("tv1's channel is "+tv1.channel+" and volume level is "+tv1.volumeLevel);
		System.out.println("tv2's channel is "+tv2.channel+" and volume level is "+tv2.volumeLevel);
	}

}

class TV{
	int channel;
	int volumeLevel;
	boolean on;
	TV(){
		channel=1;
		volumeLevel=1;
		on=false;
	}
	TV(int newchannel,int newvolumeLevel,boolean newon){
		channel=newchannel;
		volumeLevel=newvolumeLevel;
		on=newon;
	}
	public void turn0n() {
		on=true;
	}
	public void turn0ff() {
		on=false;
	}
	public void setChannel(int newChannel) {
		if (on&&newChannel>=1&&newChannel<=120)
			channel=newChannel;
	}
	public void setvolume(int newvolumeLevel) {
		if (on&&newvolumeLevel>=1&&newvolumeLevel<=7)
			volumeLevel=newvolumeLevel;
	}
	public void channnelUp() {
		if (on&&channel<120)
			channel++;
	}
	public void channelDown() {
		if (on&&channel>1)
			channel--;
	}
	public void volumeUp() {
		if (on&&volumeLevel<7)
			volumeLevel++;
	}
	public void volumeDown() {
		if (on&&volumeLevel>1)
			volumeLevel--;
	}
}


或者两个类组合成一个
public class TV {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		TV tv1=new TV();
		tv1.turn0n();
		tv1.setChannel(30);
		tv1.setvolume(3);
				
		TV tv2=new TV();
		tv2.turn0n();
		tv2.channnelUp();
		tv2.channnelUp();
		tv2.volumeUp();
				
		System.out.println("tv1's channel is "+tv1.channel+" and volume level is "+tv1.volumeLevel);
		System.out.println("tv2's channel is "+tv2.channel+" and volume level is "+tv2.volumeLevel);
	}
	
	int channel=1;
	int volumeLevel=1;
	boolean on=false;
	TV(){
	}
	TV(int newchannel,int newvolumeLevel,boolean newon){
		channel=newchannel;
		volumeLevel=newvolumeLevel;
		on=newon;
	}
	public void turn0n() {
		on=true;
	}
	public void turn0ff() {
		on=false;
	}
	public void setChannel(int newChannel) {
		if (on&&newChannel>=1&&newChannel<=120)
			channel=newChannel;
	}
	public void setvolume(int newvolumeLevel) {
		if (on&&newvolumeLevel>=1&&newvolumeLevel<=7)
			volumeLevel=newvolumeLevel;
	}
	public void channnelUp() {
		if (on&&channel<120)
			channel++;
	}
	public void channelDown() {
		if (on&&channel>1)
			channel--;
	}
	public void volumeUp() {
		if (on&&volumeLevel<7)
			volumeLevel++;
	}
	public void volumeDown() {
		if (on&&volumeLevel>1)
			volumeLevel--;
	}
}





9-5
import java.util.Scanner;
import javafx.geometry.Point2D;
public class TestPoint2D {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner input=new Scanner(System.in);
		
		System.out.print("Enter point1's x-, y-coordinates: ");
		double x1=input.nextDouble();
		double y1=input.nextDouble();
		System.out.print("Enter point2's x-, y-coordinates: ");
		double x2=input.nextDouble();
		double y2=input.nextDouble();
		
		Point2D p1=new Point2D(x1, y1);
		Point2D p2=new Point2D(x2, y2);
		System.out.println("p1 is "+p1.toString());
		System.out.println("p2 is "+p2.toString());
		System.out.println("The distance between p1 and p2 is "+p1.distance(p2));
		System.out.println("The midpoint between p1 and p2 is "+p1.midpoint(p2).toString());
	}

}





9-6
public class Circle {
	double radius;
	static int number0f0bjects=0;
	Circle(){
		radius=1;
		number0f0bjects++;
	}
	Circle(double newRadius){
		radius=newRadius;
		number0f0bjects++;
	}
	static int getNumber0f0bjects() {
		return number0f0bjects;
	}
	double getArea() {
		return radius*radius*Math.PI;
	}
}





9-7
public class TestCircleWithStaticMembers {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println("Before creating objects");
		System.out.println("The number of Circle objects is "+Circle.number0f0bjects);
		Circle c1=new Circle();
		System.out.println("\nAfter creating c1");
		System.out.println("c1: radius (" + c1.radius + ") and number of Circle objects(" + c1.number0f0bjects + ")");
		Circle c2=new Circle(5);
		c1.radius=9;
		System.out.println("\nAfter creating c2 and modifying c1");
		System.out.println("c1: radius (" + c1.radius + ") and number of Circle objects(" + c1.number0f0bjects + ")");
		System.out.println("c2: radius (" + c2.radius + ") and number of Circle objects(" + c2.number0f0bjects + ")");
	}

}





9-8
public class Circle {
	private double radius=1;
	private static int number0f0bjects=0;
	public Circle() {
		number0f0bjects++;
	}
	public Circle(double newRadius) {
		radius=newRadius;
		number0f0bjects++;
	}
	public double getRadius() {
		return radius;
	}
	public void setRadius(double newRadius) {
		radius=(newRadius>=0)?newRadius:0;
	}
	public static int getNumber0f0bjects() {
		return number0f0bjects;
	}
	public double getArea() {
		return radius*radius*Math.PI;
	}
}





9-9
public class TestCircleWithPrivateDataFields {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Circle myCircle=new Circle(5.0);
		System.out.println("The area of the circle of radius"+myCircle.getRadius()+" is "+myCircle.getArea());
		myCircle.setRadius(myCircle.getRadius()*1.1);
		System.out.println("The area of the ciecle of radius"+myCircle.getRadius()+" is "+myCircle.getArea());
		System.out.println("The number of the objects created is"+Circle.getNumber0f0bjects());
}
	
}





9-10
Circle类
public class Circle {
	private double radius=1;
	private static int number0f0bjects=0;
	public Circle() {
		number0f0bjects++;
	}
	public Circle(double newRadius) {
		radius=newRadius;
		number0f0bjects++;
	}
	public double getRadius() {
		return radius;
	}
	public void setRadius(double newRadius) {
		radius=(newRadius>=0)?newRadius:0;
	}
	public static int getNumber0f0bjects() {
		return number0f0bjects;
	}
	public double getArea() {
		return radius*radius*Math.PI;
	}
}

import java.util.Scanner;
public class Pratice{
	
	public static void main(String[] args){
		// TODO Auto-generated method stub
		Scanner input=new Scanner(System.in);
		Circle myCircle=new Circle(1);
		int n=5;
		printAreas(myCircle,n);
		System.out.println("Radius is "+myCircle.getRadius());
		System.out.println("n is "+n);
	}
	
public static void printAreas(Circle c,int times) {
	System.out.println("Radius \t\tArea");
	while(times>=1) {
		System.out.println(c.getRadius()+"\t\t"+c.getArea());
		c.setRadius(c.getRadius()+1);
		times--;
	}
}
}





9-11
Circle类
public class Circle {
	private double radius=1;
	private static int number0f0bjects=0;
	public Circle() {
		number0f0bjects++;
	}
	public Circle(double newRadius) {
		radius=newRadius;
		number0f0bjects++;
	}
	public double getRadius() {
		return radius;
	}
	public void setRadius(double newRadius) {
		radius=(newRadius>=0)?newRadius:0;
	}
	public static int getNumber0f0bjects() {
		return number0f0bjects;
	}
	public double getArea() {
		return radius*radius*Math.PI;
	}
}



import java.util.Scanner;
public class Pratice{
	
	public static void main(String[] args){
		// TODO Auto-generated method stub
		Scanner input=new Scanner(System.in);
		Circle[] circleArray;
		circleArray=createCircleArray();
		printCircleArray(circleArray);	
	}
	
	public static Circle[] createCircleArray() {
		Circle[] circleArray=new Circle[5];
		for(int i=0;i<circleArray.length;i++) {
			circleArray[i]=new Circle(Math.random()*100);
		}
		return circleArray;
	}
	
	public static void printCircleArray(Circle[] circleArray) {
		System.out.printf("%-30s%-15s\n","Radius","Area");
		for(int i=0;i<circleArray.length;i++) {
			System.out.printf("%-30f%-15f\n",circleArray[i].getRadius(),circleArray[i].getArea());
		}
		System.out.println("___________________________");
		System.out.printf("%-30s%-15f\n","The total area of circles is ",sum(circleArray));
	}
	
	public static double sum(Circle[] circleArray) {
		double sum=0;
		for(int i=0;i<circleArray.length;i++) {
			sum+=circleArray[i].getArea();
		}
		return sum;
	}
}
